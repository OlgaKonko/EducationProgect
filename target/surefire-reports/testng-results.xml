<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Test" duration-ms="11327" started-at="2018-02-13T15:57:57Z" finished-at="2018-02-13T15:58:08Z">
    <groups>
    </groups>
    <test name="All tests" duration-ms="11327" started-at="2018-02-13T15:57:57Z" finished-at="2018-02-13T15:58:08Z">
      <class name="simpleTests.PetTests">
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.PetTests@5e9289]" name="setData" is-config="true" duration-ms="739" started-at="2018-02-13T17:57:57Z" finished-at="2018-02-13T17:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
      </class> <!-- simpleTests.PetTests -->
      <class name="simpleTests.StoreTest">
        <test-method status="PASS" signature="checkInventory()[pri:0, instance:simpleTests.StoreTest@13430a7]" name="checkInventory" duration-ms="2273" started-at="2018-02-13T17:57:57Z" description="Get store inventory" finished-at="2018-02-13T17:57:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInventory -->
      </class> <!-- simpleTests.StoreTest -->
      <class name="simpleTests.UsersTest">
        <test-method status="PASS" signature="createUsers()[pri:0, instance:simpleTests.UsersTest@1603e89]" name="createUsers" is-config="true" duration-ms="0" started-at="2018-02-13T17:57:59Z" finished-at="2018-02-13T17:57:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUsers -->
        <test-method status="PASS" signature="createNewUsersWithArray()[pri:0, instance:simpleTests.UsersTest@1603e89]" name="createNewUsersWithArray" duration-ms="5388" started-at="2018-02-13T17:57:59Z" description="Create and delete users from array" finished-at="2018-02-13T17:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUsersWithArray -->
        <test-method status="PASS" signature="createNewUsersWithList()[pri:0, instance:simpleTests.UsersTest@1603e89]" name="createNewUsersWithList" duration-ms="6458" started-at="2018-02-13T17:58:00Z" description="Create and delete users from list" finished-at="2018-02-13T17:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUsersWithList -->
        <test-method status="PASS" signature="createUsers()[pri:0, instance:simpleTests.UsersTest@1603e89]" name="createUsers" is-config="true" duration-ms="0" started-at="2018-02-13T17:58:00Z" finished-at="2018-02-13T17:58:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUsers -->
      </class> <!-- simpleTests.UsersTest -->
      <class name="simpleTests.UserTests">
        <test-method status="PASS" signature="createNewUser()[pri:0, instance:simpleTests.UserTests@156c0a7]" name="createNewUser" is-config="true" duration-ms="16" started-at="2018-02-13T17:58:02Z" finished-at="2018-02-13T17:58:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="login()[pri:0, instance:simpleTests.UserTests@156c0a7]" name="login" duration-ms="2565" started-at="2018-02-13T17:58:02Z" description="Login and logout to created user" finished-at="2018-02-13T17:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="simpleUser()[pri:0, instance:simpleTests.UserTests@156c0a7]" name="simpleUser" duration-ms="2355" started-at="2018-02-13T17:58:04Z" description="Create user and delete him" finished-at="2018-02-13T17:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleUser -->
        <test-method status="PASS" signature="createNewUser()[pri:0, instance:simpleTests.UserTests@156c0a7]" name="createNewUser" is-config="true" duration-ms="0" started-at="2018-02-13T17:58:04Z" finished-at="2018-02-13T17:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="createNewUser()[pri:0, instance:simpleTests.UserTests@156c0a7]" name="createNewUser" is-config="true" duration-ms="1" started-at="2018-02-13T17:58:04Z" finished-at="2018-02-13T17:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="updateUser()[pri:0, instance:simpleTests.UserTests@156c0a7]" name="updateUser" duration-ms="3465" started-at="2018-02-13T17:58:04Z" description="Update user name and phone" finished-at="2018-02-13T17:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- simpleTests.UserTests -->
      <class name="simpleTests.FallTest">
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.FallTest@154655f]" name="setData" is-config="true" duration-ms="739" started-at="2018-02-13T17:57:57Z" finished-at="2018-02-13T17:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="FAIL" signature="nonExistFunctionFailTest()[pri:0, instance:simpleTests.FallTest@154655f]" name="nonExistFunctionFailTest" duration-ms="1265" started-at="2018-02-13T17:57:57Z" description="Call non-exist function" finished-at="2018-02-13T17:57:59Z">
          <exception class="exeptions.BaseException">
            <message>
              <![CDATA[get non-existent function]]>
            </message>
            <full-stacktrace>
              <![CDATA[exeptions.BaseException: get non-existent functionat business.TestBO.callNonExistentFunction_aroundBody0(TestBO.java:32)at business.TestBO$AjcClosure1.run(TestBO.java:1)at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:149)at io.qameta.allure.aspects.StepsAspects.step(StepsAspects.java:46)at business.TestBO.callNonExistentFunction(TestBO.java:25)at simpleTests.FallTest.nonExistFunctionFailTest(FallTest.java:26)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)Caused by: java.lang.AssertionError: 1 expectation failed.Expected status code <200> doesn't match actual status code <404>.at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:598)at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$5.call(Unknown Source)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)at com.jayway.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:760)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)at com.jayway.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:120)at com.jayway.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)at com.jayway.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:128)at com.jayway.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:117)at assertions.AssertStatusCode.assertStatusCodeIsOk(AssertStatusCode.java:11)at business.TestBO.callNonExistentFunction_aroundBody0(TestBO.java:27)... 18 more]]>
            </full-stacktrace>
          </exception> <!-- exeptions.BaseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonExistFunctionFailTest -->
      </class> <!-- simpleTests.FallTest -->
    </test> <!-- All tests -->
  </suite> <!-- Test -->
</testng-results>
