<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="13" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Test" duration-ms="60068" started-at="2018-02-02T11:11:17Z" finished-at="2018-02-02T11:12:17Z">
    <groups>
    </groups>
    <test name="All tests" duration-ms="60068" started-at="2018-02-02T11:11:17Z" finished-at="2018-02-02T11:12:17Z">
      <class name="simpleTests.PetTests">
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.PetTests@56e013]" name="setData" is-config="true" duration-ms="69" started-at="2018-02-02T13:11:20Z" finished-at="2018-02-02T13:11:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="getPets()[pri:0, instance:simpleTests.PetTests@56e013]" name="getPets" duration-ms="20053" started-at="2018-02-02T13:11:20Z" description="Get available pets" finished-at="2018-02-02T13:11:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPets -->
        <test-method status="PASS" signature="simplePet()[pri:0, instance:simpleTests.PetTests@56e013]" name="simplePet" duration-ms="1804" started-at="2018-02-02T13:11:40Z" description="Create pet and delete it" finished-at="2018-02-02T13:11:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simplePet -->
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.PetTests@56e013]" name="setData" is-config="true" duration-ms="0" started-at="2018-02-02T13:11:40Z" finished-at="2018-02-02T13:11:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.PetTests@56e013]" name="setData" is-config="true" duration-ms="15" started-at="2018-02-02T13:11:42Z" finished-at="2018-02-02T13:11:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="updatePet()[pri:0, instance:simpleTests.PetTests@56e013]" name="updatePet" duration-ms="3191" started-at="2018-02-02T13:11:42Z" description="Create pet and update its name and tags" finished-at="2018-02-02T13:11:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePet -->
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.PetTests@56e013]" name="setData" is-config="true" duration-ms="0" started-at="2018-02-02T13:11:45Z" finished-at="2018-02-02T13:11:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="updatePetStatus()[pri:0, instance:simpleTests.PetTests@56e013]" name="updatePetStatus" duration-ms="3448" started-at="2018-02-02T13:11:45Z" description="Create pet and update his status" finished-at="2018-02-02T13:11:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePetStatus -->
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.PetTests@56e013]" name="setData" is-config="true" duration-ms="0" started-at="2018-02-02T13:11:48Z" finished-at="2018-02-02T13:11:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="uploadPetPhoto()[pri:0, instance:simpleTests.PetTests@56e013]" name="uploadPetPhoto" duration-ms="2504" started-at="2018-02-02T13:11:48Z" description="Create pet and upload image to it" finished-at="2018-02-02T13:11:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uploadPetPhoto -->
      </class> <!-- simpleTests.PetTests -->
      <class name="simpleTests.StoreTest">
        <test-method status="PASS" signature="checkInventory()[pri:0, instance:simpleTests.StoreTest@1c9dfc5]" name="checkInventory" duration-ms="633" started-at="2018-02-02T13:11:51Z" description="Get store inventory" finished-at="2018-02-02T13:11:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInventory -->
        <test-method status="PASS" signature="createOrder()[pri:0, instance:simpleTests.StoreTest@1c9dfc5]" name="createOrder" duration-ms="2288" started-at="2018-02-02T13:11:51Z" description="Create order and delete it" finished-at="2018-02-02T13:11:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
      </class> <!-- simpleTests.StoreTest -->
      <class name="simpleTests.UsersTest">
        <test-method status="PASS" signature="createUsers()[pri:0, instance:simpleTests.UsersTest@258c2f]" name="createUsers" is-config="true" duration-ms="0" started-at="2018-02-02T13:11:54Z" finished-at="2018-02-02T13:11:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUsers -->
        <test-method status="PASS" signature="createNewUsersWithArray()[pri:0, instance:simpleTests.UsersTest@258c2f]" name="createNewUsersWithArray" duration-ms="8310" started-at="2018-02-02T13:11:54Z" description="Create and delete users from array" finished-at="2018-02-02T13:12:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUsersWithArray -->
        <test-method status="PASS" signature="createUsers()[pri:0, instance:simpleTests.UsersTest@258c2f]" name="createUsers" is-config="true" duration-ms="0" started-at="2018-02-02T13:12:02Z" finished-at="2018-02-02T13:12:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUsers -->
        <test-method status="PASS" signature="createNewUsersWithList()[pri:0, instance:simpleTests.UsersTest@258c2f]" name="createNewUsersWithList" duration-ms="6665" started-at="2018-02-02T13:12:02Z" description="Create and delete users from list" finished-at="2018-02-02T13:12:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUsersWithList -->
      </class> <!-- simpleTests.UsersTest -->
      <class name="simpleTests.UserTests">
        <test-method status="PASS" signature="createNewUser()[pri:0, instance:simpleTests.UserTests@ac4385]" name="createNewUser" is-config="true" duration-ms="0" started-at="2018-02-02T13:12:09Z" finished-at="2018-02-02T13:12:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="login()[pri:0, instance:simpleTests.UserTests@ac4385]" name="login" duration-ms="2690" started-at="2018-02-02T13:12:09Z" description="Login and logout to created user" finished-at="2018-02-02T13:12:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="createNewUser()[pri:0, instance:simpleTests.UserTests@ac4385]" name="createNewUser" is-config="true" duration-ms="15" started-at="2018-02-02T13:12:11Z" finished-at="2018-02-02T13:12:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="simpleUser()[pri:0, instance:simpleTests.UserTests@ac4385]" name="simpleUser" duration-ms="2157" started-at="2018-02-02T13:12:11Z" description="Create user and delete him" finished-at="2018-02-02T13:12:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleUser -->
        <test-method status="PASS" signature="createNewUser()[pri:0, instance:simpleTests.UserTests@ac4385]" name="createNewUser" is-config="true" duration-ms="0" started-at="2018-02-02T13:12:14Z" finished-at="2018-02-02T13:12:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="updateUser()[pri:0, instance:simpleTests.UserTests@ac4385]" name="updateUser" duration-ms="3483" started-at="2018-02-02T13:12:14Z" description="Update user name and phone" finished-at="2018-02-02T13:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- simpleTests.UserTests -->
      <class name="simpleTests.FallTest">
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.FallTest@75c20c]" name="setData" is-config="true" duration-ms="771" started-at="2018-02-02T13:11:17Z" finished-at="2018-02-02T13:11:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="FAIL" signature="nonExistFunctionFailTest()[pri:0, instance:simpleTests.FallTest@75c20c]" name="nonExistFunctionFailTest" duration-ms="1485" started-at="2018-02-02T13:11:18Z" description="Call non-exist function" finished-at="2018-02-02T13:11:20Z">
          <exception class="exeptions.BaseException">
            <message>
              <![CDATA[get non-existent function]]>
            </message>
            <full-stacktrace>
              <![CDATA[exeptions.BaseException: get non-existent functionat business.TestBO.callNonExistentFunction_aroundBody0(TestBO.java:32)at business.TestBO$AjcClosure1.run(TestBO.java:1)at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:149)at io.qameta.allure.aspects.StepsAspects.step(StepsAspects.java:46)at business.TestBO.callNonExistentFunction(TestBO.java:25)at simpleTests.FallTest.nonExistFunctionFailTest(FallTest.java:32)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)Caused by: java.lang.AssertionError: 1 expectation failed.Expected status code <200> doesn't match actual status code <404>.at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:598)at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)at com.jayway.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:760)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)at com.jayway.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:120)at com.jayway.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)at com.jayway.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:128)at com.jayway.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:117)at assertions.AssertStatusCode.assertStatusCodeIsOk(AssertStatusCode.java:11)at business.TestBO.callNonExistentFunction_aroundBody0(TestBO.java:27)... 33 more]]>
            </full-stacktrace>
          </exception> <!-- exeptions.BaseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonExistFunctionFailTest -->
      </class> <!-- simpleTests.FallTest -->
    </test> <!-- All tests -->
  </suite> <!-- Test -->
</testng-results>
