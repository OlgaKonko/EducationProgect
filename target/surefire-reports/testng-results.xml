<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="12" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Test" duration-ms="67736" started-at="2018-01-30T13:06:03Z" finished-at="2018-01-30T13:07:10Z">
    <groups>
    </groups>
    <test name="All tests" duration-ms="67736" started-at="2018-01-30T13:06:03Z" finished-at="2018-01-30T13:07:10Z">
      <class name="simpleTests.PetTests">
        <test-method status="PASS" signature="setData()[pri:0, instance:simpleTests.PetTests@7a8af2]" name="setData" is-config="true" duration-ms="20754" started-at="2018-01-30T15:06:03Z" finished-at="2018-01-30T15:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.PetTests@7a8af2]" name="createNewUser" is-config="true" duration-ms="2" started-at="2018-01-30T15:06:23Z" finished-at="2018-01-30T15:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.PetTests.getPets()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="getPets()[pri:0, instance:simpleTests.PetTests@7a8af2]" name="getPets" duration-ms="11973" started-at="2018-01-30T15:06:23Z" description="Get available pets" finished-at="2018-01-30T15:06:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPets -->
        <test-method status="PASS" signature="simplePet()[pri:0, instance:simpleTests.PetTests@7a8af2]" name="simplePet" duration-ms="2071" started-at="2018-01-30T15:06:35Z" description="Create pet and delete it" finished-at="2018-01-30T15:06:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simplePet -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.PetTests@7a8af2]" name="createNewUser" is-config="true" duration-ms="0" started-at="2018-01-30T15:06:35Z" finished-at="2018-01-30T15:06:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.PetTests.simplePet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.PetTests@7a8af2]" name="createNewUser" is-config="true" duration-ms="1" started-at="2018-01-30T15:06:38Z" finished-at="2018-01-30T15:06:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.PetTests.updatePet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="updatePet()[pri:0, instance:simpleTests.PetTests@7a8af2]" name="updatePet" duration-ms="2138" started-at="2018-01-30T15:06:38Z" description="Create pet and update his name and tags" finished-at="2018-01-30T15:06:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePet -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.PetTests@7a8af2]" name="createNewUser" is-config="true" duration-ms="1" started-at="2018-01-30T15:06:40Z" finished-at="2018-01-30T15:06:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.PetTests.updatePetStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="updatePetStatus()[pri:0, instance:simpleTests.PetTests@7a8af2]" name="updatePetStatus" duration-ms="3048" started-at="2018-01-30T15:06:40Z" description="Create pet and update his status" finished-at="2018-01-30T15:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePetStatus -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.PetTests@7a8af2]" name="createNewUser" is-config="true" duration-ms="1" started-at="2018-01-30T15:06:43Z" finished-at="2018-01-30T15:06:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.PetTests.uploadPetPhoto()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="uploadPetPhoto()[pri:0, instance:simpleTests.PetTests@7a8af2]" name="uploadPetPhoto" duration-ms="2733" started-at="2018-01-30T15:06:43Z" description="Create pet and upload image to it" finished-at="2018-01-30T15:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uploadPetPhoto -->
      </class> <!-- simpleTests.PetTests -->
      <class name="simpleTests.StoreTest">
        <test-method status="PASS" signature="checkInventory()[pri:0, instance:simpleTests.StoreTest@c07b8d]" name="checkInventory" duration-ms="690" started-at="2018-01-30T15:06:45Z" description="Get store inventory" finished-at="2018-01-30T15:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInventory -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.StoreTest@c07b8d]" name="createNewUser" is-config="true" duration-ms="0" started-at="2018-01-30T15:06:45Z" finished-at="2018-01-30T15:06:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.StoreTest.checkInventory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.StoreTest@c07b8d]" name="createNewUser" is-config="true" duration-ms="0" started-at="2018-01-30T15:06:46Z" finished-at="2018-01-30T15:06:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.StoreTest.createOrder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="createOrder()[pri:0, instance:simpleTests.StoreTest@c07b8d]" name="createOrder" duration-ms="1806" started-at="2018-01-30T15:06:46Z" description="Create order and delete it" finished-at="2018-01-30T15:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
      </class> <!-- simpleTests.StoreTest -->
      <class name="simpleTests.UserTests">
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.UserTests@bc645]" name="createNewUser" is-config="true" duration-ms="2" started-at="2018-01-30T15:06:59Z" finished-at="2018-01-30T15:06:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.UserTests.login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="login()[pri:0, instance:simpleTests.UserTests@bc645]" name="login" duration-ms="3775" started-at="2018-01-30T15:06:59Z" description="Login and logout to created user" finished-at="2018-01-30T15:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.UserTests@bc645]" name="createNewUser" is-config="true" duration-ms="1" started-at="2018-01-30T15:07:03Z" finished-at="2018-01-30T15:07:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.UserTests.simpleUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="simpleUser()[pri:0, instance:simpleTests.UserTests@bc645]" name="simpleUser" duration-ms="3149" started-at="2018-01-30T15:07:03Z" description="Create user and delete him" finished-at="2018-01-30T15:07:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleUser -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.UserTests@bc645]" name="createNewUser" is-config="true" duration-ms="1" started-at="2018-01-30T15:07:06Z" finished-at="2018-01-30T15:07:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.UserTests.updateUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="updateUser()[pri:0, instance:simpleTests.UserTests@bc645]" name="updateUser" duration-ms="3910" started-at="2018-01-30T15:07:06Z" description="Update user name and phone" finished-at="2018-01-30T15:07:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- simpleTests.UserTests -->
      <class name="simpleTests.UsersTest">
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.UsersTest@bf653]" name="createNewUser" is-config="true" duration-ms="1" started-at="2018-01-30T15:06:48Z" finished-at="2018-01-30T15:06:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.UsersTest.createNewUsersWithArray()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="createUsers()[pri:0, instance:simpleTests.UsersTest@bf653]" name="createUsers" is-config="true" duration-ms="4" started-at="2018-01-30T15:06:48Z" finished-at="2018-01-30T15:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUsers -->
        <test-method status="PASS" signature="createNewUsersWithArray()[pri:0, instance:simpleTests.UsersTest@bf653]" name="createNewUsersWithArray" duration-ms="5695" started-at="2018-01-30T15:06:48Z" description="Create and delete users from array" finished-at="2018-01-30T15:06:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUsersWithArray -->
        <test-method status="PASS" signature="createNewUser(java.lang.reflect.Method)[pri:0, instance:simpleTests.UsersTest@bf653]" name="createNewUser" is-config="true" duration-ms="1" started-at="2018-01-30T15:06:54Z" finished-at="2018-01-30T15:06:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void simpleTests.UsersTest.createNewUsersWithList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method status="PASS" signature="createUsers()[pri:0, instance:simpleTests.UsersTest@bf653]" name="createUsers" is-config="true" duration-ms="0" started-at="2018-01-30T15:06:54Z" finished-at="2018-01-30T15:06:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUsers -->
        <test-method status="PASS" signature="createNewUsersWithList()[pri:0, instance:simpleTests.UsersTest@bf653]" name="createNewUsersWithList" duration-ms="5666" started-at="2018-01-30T15:06:54Z" description="Create and delete users from list" finished-at="2018-01-30T15:06:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUsersWithList -->
      </class> <!-- simpleTests.UsersTest -->
    </test> <!-- All tests -->
  </suite> <!-- Test -->
</testng-results>
